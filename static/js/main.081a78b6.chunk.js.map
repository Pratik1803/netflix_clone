{"version":3,"sources":["axios.js","Row.jsx","request.js","Banner.jsx","Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","useEffect","a","get","request","data","results","fetchData","className","style","padding","map","movie","src","poster_path","backdrop_path","alt","name","id","apiKey","requests","fetchTrending","fetchNetflixoriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","random","setRandom","Math","floor","length","console","log","overview","vote_average","Header","color","background","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.081a78b6.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL:\"https://api.themoviedb.org/3\"\r\n});\r\n\r\nexport default instance;","import axios from \"./axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Row.css\";\r\nconst baseUrl = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nconst Row = ({ title, fetchUrl, isLargeRow }) => {\r\n  const [movies, setMovies] = useState([]);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2 style={{ padding: '10px' }}>{title}</h2>\r\n      <div className=\"row_posters\">\r\n        {movies.map((movie) => {\r\n          return (\r\n            <img\r\n              key={movie.id}\r\n              className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n              src={`${baseUrl}${isLargeRow ? movie.poster_path : movie.backdrop_path}`}\r\n              alt={movie.name}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Row;\r\n","const apiKey = 'babbd749e2966717e763c62258478005';\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${apiKey}&language=en-US`,\r\n    fetchNetflixoriginals: `/discover/tv?api_key=${apiKey}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${apiKey}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${apiKey}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${apiKey}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${apiKey}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${apiKey}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${apiKey}&with_genres=`\r\n};\r\nexport default requests;","import React, { useEffect, useState } from 'react';\r\nimport requests from './request';\r\nimport axios from './axios';\r\nimport './Banner.css';\r\n\r\nconst Banner = () => {\r\n    const [random, setRandom] = useState([]);\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            let movie = await axios.get(requests.fetchNetflixoriginals);\r\n            setRandom(movie.data.results[Math.floor(Math.random() * movie.data.results.length - 1) + 1]);\r\n        };\r\n        fetchData();\r\n    }, []);\r\n    console.log(random);\r\n\r\n    return <div className=\"banner\">\r\n        <div className=\"random_info\">\r\n            <h1>{random.name}</h1>\r\n            <p>{random.overview}</p>\r\n            <br></br>\r\n            <p>Rating: {random.vote_average}</p>\r\n        </div>\r\n        <img className=\"banner_img\" src={`https://image.tmdb.org/t/p/original/${random.backdrop_path}`} alt=\"this is banner.\"></img>\r\n        <div className=\"fade\"></div>\r\n    </div>\r\n};\r\n\r\nexport default Banner;","import React from 'react';\r\nimport Netflix from './images/netflix.png';\r\nimport \"./App.css\"\r\nconst Header = () => {\r\n    let src = \"./images/netflix.png\"\r\n    return <header>\r\n        <h1 style={{ color: 'red', background: 'transparent' }}>NETFLIX</h1>\r\n    </header>\r\n};\r\nexport default Header;","import './App.css';\nimport Row from './Row';\nimport requests from './request';\nimport Banner from './Banner';\nimport Header from './Header';\n\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header />\n      <Banner />\n      <Row isLargeRow title=\"Netflix Originals!\" fetchUrl={requests.fetchNetflixoriginals} />\n      <Row title=\"Trending Now!\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies!\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romantic Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}